import { NextResponse } from "next/server";
import { getTimePlus30Minutes } from "../../utils/lifeTime";

/**
 * –°–µ—Ä–≤–µ—Ä–Ω—ã–π API –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ PayLink.kz
 *
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É CORS, —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å—ã –∫ PayLink –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ,
 * –∞ –∫–ª–∏–µ–Ω—Ç –æ–±—Ä–∞—â–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ –Ω–∞—à–µ–º—É API.
 *
 * POST /api/paylink
 * Body: { cartData: { totalPrice, totalItems, items } }
 */
export async function POST(request) {
  console.log("üöÄ –°–µ—Ä–≤–µ—Ä–Ω—ã–π API PayLink: –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞");
  const expired_at = getTimePlus30Minutes();
  try {
    const { cartData } = await request.json();
    console.log("üì¶ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã:", cartData);

    // –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const shopSecret = process.env.PAYLINK_SHOP_SECRET;
    const shopId = process.env.PAYLINK_SHOP_ID;
    const returnUrl =
      process.env.PAYLINK_RETURN_URL ||
      process.env.NEXT_PUBLIC_PAYLINK_RETURN_URL ||
      "https://goldgames.kz/api/paylink/verification";

    console.log("üîë –°–µ—Ä–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PayLink:");
    console.log(
      "- Shop ID:",
      shopId ? `***${shopId.slice(-4)}` : "‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù"
    );
    console.log(
      "- Shop Secret:",
      shopSecret ? `***${shopSecret.slice(-8)}` : "‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù"
    );
    console.log("- Return URL:", returnUrl);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if (!shopId || !shopSecret) {
      console.error("üö® –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
      console.error("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:");
      console.error("- PAYLINK_SHOP_ID:", shopId ? "‚úÖ" : "‚ùå");
      console.error("- PAYLINK_SHOP_SECRET:", shopSecret ? "‚úÖ" : "‚ùå");

      return NextResponse.json(
        {
          success: false,
          error:
            "–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PayLink. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
          details: "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è",
        },
        { status: 500 }
      );
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è PayLink
    const baseData = {
      currency: "KZT",
      infinite: true,
      test: process.env.NODE_ENV !== "production", // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
      immortal: false,
      expired_at: expired_at,
      return_url: returnUrl,
      shop_id: shopId,
      language: "ru",
      transaction_type: "payment",
    };

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    const orderDescription =
      cartData.items && cartData.items.length > 0
        ? `–ó–∞–∫–∞–∑: ${cartData.items
            .map((item) => `${item.title} (${item.quantity}—à—Ç)`)
            .join(", ")}`
        : "–ó–∞–∫–∞–∑ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞";

    const orderName =
      cartData.totalItems > 1
        ? `–ó–∞–∫–∞–∑ –∏–∑ ${cartData.totalItems} —Ç–æ–≤–∞—Ä${
            cartData.totalItems > 4 ? "–æ–≤" : cartData.totalItems > 1 ? "–∞" : ""
          }`
        : cartData.items?.[0]?.title || "–ü–æ–∫—É–ø–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ";

    console.log("üìã –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:");
    console.log("- –ù–∞–∑–≤–∞–Ω–∏–µ:", orderName);
    console.log("- –û–ø–∏—Å–∞–Ω–∏–µ:", orderDescription);
    console.log("- –¶–µ–Ω–∞ (—Ç–µ–Ω–≥–µ):", cartData.totalPrice);
    console.log("- –°—É–º–º–∞ –¥–ª—è PayLink (—Ç–∏—ã–Ω—ã):", cartData.totalPrice * 100);

    const payload = {
      name: orderName,
      description: orderDescription,
      amount: (cartData.totalPrice * 100).toString(),
      ...baseData,
    };

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ PayLink API...");

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ PayLink API –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    const authString = `${shopId}:${shopSecret}`;
    const base64Auth = Buffer.from(authString).toString("base64");

    const response = await fetch("https://api.paylink.kz/products", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: `Basic ${base64Auth}`,
      },
      body: JSON.stringify(payload),
    });

    console.log("üì° –û—Ç–≤–µ—Ç –æ—Ç PayLink API:");
    console.log("- –°—Ç–∞—Ç—É—Å:", response.status, response.statusText);

    if (!response.ok) {
      const error = await response.json();
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç PayLink API:", error);

      return NextResponse.json(
        {
          success: false,
          error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã",
          details: error,
          status: response.status,
        },
        { status: response.status }
      );
    }

    const result = await response.json();
    console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç PayLink:");
    console.log("- ID –ø—Ä–æ–¥—É–∫—Ç–∞:", result.id);
    console.log("- –°—Å—ã–ª–∫–∞ –æ–ø–ª–∞—Ç—ã:", result.pay_url);

    return NextResponse.json({
      success: true,
      data: result,
    });
  } catch (error) {
    console.error("üí• –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ PayLink –∑–∞–ø—Ä–æ—Å–∞:");
    console.error("- –¢–∏–ø:", error.name);
    console.error("- –°–æ–æ–±—â–µ–Ω–∏–µ:", error.message);
    console.error("- –°—Ç–µ–∫:", error.stack);

    return NextResponse.json(
      {
        success: false,
        error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞",
        details: error.message,
      },
      { status: 500 }
    );
  }
}
