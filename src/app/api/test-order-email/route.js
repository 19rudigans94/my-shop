import { NextResponse } from "next/server";
import {
  sendOrderConfirmationEmail,
  sendManagerNotificationEmail,
} from "@/app/utils/sendEmail";

export async function GET() {
  try {
    console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –∑–∞–∫–∞–∑–∞...");

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    const testOrderData = {
      customer: {
        name: "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç",
        phone: "+7 777 123 45 67",
        email: "rudi.viktor.94@bk.ru", // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email –¥–ª—è —Ç–µ—Å—Ç–∞
      },
      order: {
        items: [
          {
            name: "Detroit: Become Human",
            quantity: 1,
            price: 10,
            total: 10,
            platform: "PS5",
            digitalKeys: null, // –¢–µ—Å—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
          },
        ],
        totalAmount: 10,
        hasDigitalItems: false,
        hasPhysicalItems: true,
        paymentId: "TEST-" + Date.now(),
        orderDate: new Date().toLocaleString("ru-RU"),
      },
      orderId: "TEST-ORDER-" + Date.now(),
    };

    console.log("üìß –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:", testOrderData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –∫–ª–∏–µ–Ω—Ç—É
    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ email –∫–ª–∏–µ–Ω—Ç—É...");
    const customerEmailSent = await sendOrderConfirmationEmail(testOrderData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –º–µ–Ω–µ–¥–∂–µ—Ä—É
    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ email –º–µ–Ω–µ–¥–∂–µ—Ä—É...");
    const managerEmailSent = await sendManagerNotificationEmail(testOrderData);

    const results = {
      customerEmail: customerEmailSent,
      managerEmail: managerEmailSent,
    };

    console.log("üìß –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö email:", results);

    return NextResponse.json({
      success: true,
      message: "–¢–µ—Å—Ç–æ–≤—ã–µ email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã",
      results,
      testData: testOrderData,
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ email:", error);
    return NextResponse.json(
      {
        success: false,
        error: error.message,
        stack: error.stack,
      },
      { status: 500 }
    );
  }
}
