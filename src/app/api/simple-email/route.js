import { NextResponse } from "next/server";
import {
  sendOrderConfirmationEmail,
  sendManagerNotificationEmail,
} from "@/app/utils/sendEmail";

export async function POST(request) {
  try {
    console.log("üìß Simple email API –≤—ã–∑–≤–∞–Ω");

    const { orderData, paymentId } = await request.json();

    console.log("üìß –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:", {
      email: orderData.contactData?.email,
      itemsCount: orderData.items?.length || 0,
      paymentId,
    });

    // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ–∑ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const processedItems = orderData.items.map((item) => ({
      name: item.title,
      quantity: item.quantity,
      price: item.price || 0,
      total: item.total || item.price * item.quantity,
      category: item.category,
      platform: item.platform,
      // –ü–æ–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∫–∞–∫ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
      digitalKeys: null,
    }));

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è email
    const emailData = {
      customer: {
        name: orderData.contactData.email.split("@")[0],
        phone: orderData.contactData.phone,
        email: orderData.contactData.email,
      },
      order: {
        items: processedItems,
        totalAmount: orderData.totalPrice,
        hasDigitalItems: false, // –ü–æ–∫–∞ false –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
        hasPhysicalItems: true, // –í—Å–µ–≥–¥–∞ true –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
        paymentId,
        orderDate: orderData.orderDate || new Date().toLocaleString("ru-RU"),
      },
      orderId: paymentId || `ORDER-${Date.now()}`,
    };

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ email –∫–ª–∏–µ–Ω—Ç—É...");
    const customerEmailSent = await sendOrderConfirmationEmail(emailData);
    console.log("üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç email –∫–ª–∏–µ–Ω—Ç—É:", customerEmailSent);

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ email –º–µ–Ω–µ–¥–∂–µ—Ä—É...");
    const managerEmailSent = await sendManagerNotificationEmail(emailData);
    console.log("üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç email –º–µ–Ω–µ–¥–∂–µ—Ä—É:", managerEmailSent);

    const results = {
      customerEmail: customerEmailSent,
      managerEmail: managerEmailSent,
    };

    console.log("üìß –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:", results);

    return NextResponse.json({
      success: true,
      message: "Simple email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã",
      results,
      emailData: {
        customer: emailData.customer,
        orderSummary: {
          itemsCount: emailData.order.items.length,
          totalAmount: emailData.order.totalAmount,
          orderId: emailData.orderId,
        },
      },
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ simple email API:", error);
    return NextResponse.json(
      {
        success: false,
        error: error.message,
        stack: error.stack,
      },
      { status: 500 }
    );
  }
}
