import nodemailer from "nodemailer";

const transporter = nodemailer.createTransport({
  host: process.env.NEXT_SMTP_HOST,
  port: process.env.NEXT_SMTP_PORT,
  secure: true,
  auth: {
    user: process.env.NEXT_SMTP_USER,
    pass: process.env.NEXT_SMTP_PASSWORD,
  },
  tls: {
    rejectUnauthorized: false,
  },
  debug: true,
});

export async function sendOrderConfirmationEmail(orderData) {
  const { customer, order, orderId } = orderData;

  // –§–æ—Ä–º–∏—Ä—É–µ–º HTML —Ç–∞–±–ª–∏—Ü—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
  const itemsTable = `
    <table style="width: 100%; border-collapse: collapse; margin: 20px 0;">
      <thead>
        <tr style="background-color: #f8f9fa;">
          <th style="padding: 12px; text-align: left; border: 1px solid #dee2e6;">–¢–æ–≤–∞—Ä</th>
          <th style="padding: 12px; text-align: center; border: 1px solid #dee2e6;">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
          <th style="padding: 12px; text-align: right; border: 1px solid #dee2e6;">–¶–µ–Ω–∞</th>
          <th style="padding: 12px; text-align: right; border: 1px solid #dee2e6;">–°—É–º–º–∞</th>
        </tr>
      </thead>
      <tbody>
        ${order.items
          .map(
            (item) => `
          <tr>
            <td style="padding: 12px; border: 1px solid #dee2e6;">
              ${item.name || "–¢–æ–≤–∞—Ä"}
              ${
                item.platform
                  ? `<br><small style="color: #666;">${item.platform}</small>`
                  : ""
              }
              ${
                item.digitalKeys
                  ? `<br><span style="color: #28a745; font-weight: bold;">üîë –¶–∏—Ñ—Ä–æ–≤–∞—è –∫–æ–ø–∏—è</span>`
                  : ""
              }
            </td>
            <td style="padding: 12px; text-align: center; border: 1px solid #dee2e6;">${
              item.quantity
            }</td>
            <td style="padding: 12px; text-align: right; border: 1px solid #dee2e6;">${item.price.toLocaleString()} ‚Ç∏</td>
            <td style="padding: 12px; text-align: right; border: 1px solid #dee2e6;">${item.total.toLocaleString()} ‚Ç∏</td>
          </tr>
          ${
            item.digitalKeys
              ? `
          <tr>
            <td colspan="4" style="padding: 12px; border: 1px solid #dee2e6; background-color: #f8f9fa;">
              <strong>üîë –ö–ª—é—á–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</strong><br>
              ${item.digitalKeys
                .map(
                  (key) =>
                    `<code style="background: #e9ecef; padding: 2px 4px; margin: 2px; display: inline-block; font-family: monospace;">${key}</code>`
                )
                .join("<br>")}
            </td>
          </tr>
          `
              : ""
          }
        `
          )
          .join("")}
      </tbody>
      <tfoot>
        <tr style="background-color: #f8f9fa; font-weight: bold;">
          <td colspan="3" style="padding: 12px; text-align: right; border: 1px solid #dee2e6;">–ò—Ç–æ–≥–æ:</td>
          <td style="padding: 12px; text-align: right; border: 1px solid #dee2e6;">${order.totalAmount.toLocaleString()} ‚Ç∏</td>
        </tr>
      </tfoot>
    </table>
  `;

  // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤
  let additionalInfo = "";

  if (order.hasDigitalItems && order.hasPhysicalItems) {
    additionalInfo = `
      <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 20px 0; border-radius: 5px;">
        <h4 style="color: #856404; margin: 0 0 10px 0;">üì¶ –°–º–µ—à–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑</h4>
        <p style="color: #856404; margin: 0;">
          –í–∞—à –∑–∞–∫–∞–∑ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–∞–∫ —Ü–∏—Ñ—Ä–æ–≤—ã–µ, —Ç–∞–∫ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã. –¶–∏—Ñ—Ä–æ–≤—ã–µ –∫–ª—é—á–∏ —É–∫–∞–∑–∞–Ω—ã –≤—ã—à–µ. 
          –ü–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º —Ç–æ–≤–∞—Ä–∞–º —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –¥–æ—Å—Ç–∞–≤–∫–∏.
        </p>
      </div>
    `;
  } else if (order.hasDigitalItems) {
    additionalInfo = `
      <div style="background-color: #d4edda; border: 1px solid #c3e6cb; padding: 15px; margin: 20px 0; border-radius: 5px;">
        <h4 style="color: #155724; margin: 0 0 10px 0;">üîë –¶–∏—Ñ—Ä–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã</h4>
        <p style="color: #155724; margin: 0;">
          –í—Å–µ –≤–∞—à–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –∫–ª—é—á–∏ —É–∫–∞–∑–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ –≤—ã—à–µ. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ - –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞—à–∏ –∫–ª—é—á–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
        </p>
      </div>
    `;
  } else if (order.hasPhysicalItems) {
    additionalInfo = `
      <div style="background-color: #cce7ff; border: 1px solid #99d6ff; padding: 15px; margin: 20px 0; border-radius: 5px;">
        <h4 style="color: #004085; margin: 0 0 10px 0;">üì¶ –§–∏–∑–∏—á–µ—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã</h4>
        <p style="color: #004085; margin: 0;">
          –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–æ–≤–∞—Ä–∞.
        </p>
      </div>
    `;
  }

  const mailOptions = {
    from: `GoldGames <${process.env.NEXT_FEEDBACK_MAIL}>`,
    to: customer.email,
    subject: `–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ #${orderId}`,
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #333; text-align: center;">–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑!</h2>
        <p style="color: #666;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${customer.name}!</p>
        <p style="color: #666;">–í–∞—à –∑–∞–∫–∞–∑ #${orderId} —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω ${
      order.orderDate ? `(${order.orderDate})` : ""
    }.</p>
        
        <h3 style="color: #333; margin-top: 30px;">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:</h3>
        ${itemsTable}
        
        ${additionalInfo}
        
        <h3 style="color: #333; margin-top: 30px;">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
        <p style="color: #666;">
          <strong>–ò–º—è:</strong> ${customer.name}<br>
          <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${customer.phone}<br>
          <strong>Email:</strong> ${customer.email}
          ${
            order.paymentId
              ? `<br><strong>ID –ø–ª–∞—Ç–µ–∂–∞:</strong> ${order.paymentId}`
              : ""
          }
        </p>
        
        <div style="background-color: #f8f9fa; border-left: 4px solid #28a745; padding: 15px; margin: 20px 0;">
          <h4 style="color: #155724; margin: 0 0 10px 0;">üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
          <p style="color: #155724; margin: 0;">
            WhatsApp: <a href="https://wa.me/77477048081" style="color: #155724;">+7 747 704 80 81</a><br>
            Email: <a href="mailto:info@goldgames.kz" style="color: #155724;">info@goldgames.kz</a><br>
            –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ü–ù-–í–° —Å 9:00 –¥–æ 21:00 (GMT+6)
          </p>
        </div>
      </div>
    `,
  };

  try {
    const info = await transporter.sendMail(mailOptions);
    console.log("Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:", info.response);
    return true;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email:", error);
    return false;
  }
}
