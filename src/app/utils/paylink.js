/**
 * –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PayLink —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ API
 *
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π endpoint /api/paylink,
 * –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç –≤ PayLink –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
 */

export const createPayLinkProduct = async (cartData) => {
  console.log("üöÄ createPayLinkProduct: –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã", cartData);

  try {
    const response = await fetch("/api/paylink", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ cartData }),
    });

    console.log("üì° –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status, response.statusText);

    if (!response.ok) {
      const errorData = await response.json();
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", errorData);
      throw new Error(
        errorData.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã"
      );
    }

    const result = await response.json();
    console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:1", result);

    // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç { success: true, data: { id, pay_url, ... } }
    if (result.success && result.data) {
      return result.data; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å pay_url
    } else {
      throw new Error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
    }
  } catch (error) {
    console.error("üí• –û—à–∏–±–∫–∞ –≤ createPayLinkProduct:", error);
    throw error;
  }
};
